<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b7e0a846-194a-4a6d-afe5-9d21b706db32" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/cadence/src/Cadence.spec.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/cadence/src/Timer.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pnpm-lock.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/pnpm-lock.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cadence/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/src/cadence/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cadence/src/AudioLoader.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/cadence/src/AudioLoader.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cadence/src/Cadence.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/cadence/src/Cadence.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cadence/src/LoadedLoop.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/cadence/src/LoadedLoop.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cadence/src/utils/convertTimeToMs.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/cadence/src/utils/convertTime.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cadence/src/utils/convertTimeToMs.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/cadence/src/utils/convertTime.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="chore/add-contributing-informations" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2aAkXEhz88JcggZ2PuXT67YnLu9" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;Vitest.AudioLoader.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.AudioLoader.should not load a loop if it is already loaded.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.Cadence.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.LoadedLoop.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.LoadedLoop.should create an interval.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.LoadedLoop.should start the loop at the correct time.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.LoadedLoop.should stop the loop at the correct time.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.Timer.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.decodeAudioData.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;feat/interval&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;pnpm&quot;,
    &quot;npm.cadence &gt; coverage.executor&quot;: &quot;Run&quot;,
    &quot;npm.cadence &gt; generate:playground.executor&quot;: &quot;Run&quot;,
    &quot;npm.cadence &gt; test.executor&quot;: &quot;Run&quot;,
    &quot;npm.docs &gt; docs:dev.executor&quot;: &quot;Run&quot;,
    &quot;npm.playground &gt; dev.executor&quot;: &quot;Run&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;settings.javascript.linters.eslint&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/timothee/CODE/COURS/iim-pfe-23-24/src/playground/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docs/content/api-documentation" />
      <recent name="$PROJECT_DIR$/docs/content/library" />
    </key>
  </component>
  <component name="RunManager" selected="npm.cadence &gt; coverage">
    <configuration name="AudioLoader" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/src/cadence/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/src/cadence" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/cadence/src/AudioLoader.spec.ts" />
      <test-names>
        <test-name value="AudioLoader" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Cadence" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/src/cadence/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/src/cadence" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/cadence/src/Cadence.spec.ts" />
      <test-names>
        <test-name value="Cadence" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="LoadedLoop" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/src/cadence/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/src/cadence" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/cadence/src/LoadedLoop.spec.ts" />
      <test-names>
        <test-name value="LoadedLoop" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Timer" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/src/cadence/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$/src/cadence" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/cadence/src/Timer.spec.ts" />
      <test-names>
        <test-name value="Timer" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="cadence &gt; coverage" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/src/cadence/package.json" />
      <command value="run" />
      <scripts>
        <script value="coverage" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.cadence &gt; coverage" />
        <item itemvalue="Vitest.Cadence" />
        <item itemvalue="Vitest.Timer" />
        <item itemvalue="Vitest.AudioLoader" />
        <item itemvalue="Vitest.LoadedLoop" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b7e0a846-194a-4a6d-afe5-9d21b706db32" name="Changes" comment="" />
      <created>1703768810527</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1703768810527</updated>
      <workItem from="1703768812798" duration="4441000" />
      <workItem from="1704827289914" duration="2561000" />
      <workItem from="1704980506453" duration="2571000" />
      <workItem from="1704985535151" duration="114000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>